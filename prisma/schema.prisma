// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ItemStatus {
  IN_USE
  AVAILABLE
  UNDER_MAINTENANCE
}

enum FloorType {
  FIRST_FLOOR
  SECOND_FLOOR
  THIRD_FLOOR
  FOURTH_FLOOR
}

// Models
model Item {
  id           Int        @id @default(autoincrement())
  uuid         String     @unique
  name         String     @unique
  metadata     String?
  status       ItemStatus @default(AVAILABLE)
  category     Category   @relation(fields: [categoryName], references: [name])
  categoryName String
  location     Location   @relation(fields: [locationName], references: [name])
  locationName String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  computerId   Int?

  // relations
  ComputerMonitor    Computer[] @relation("ComputerMonitor")
  ComputerKeyboard   Computer[] @relation("ComputerKeyboard")
  ComputerMouse      Computer[] @relation("ComputerMouse")
  ComputerSystemUnit Computer[] @relation("ComputerSystemUnit")
}

model Category {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique
  name      String   @unique
  metadata  String?
  Item      Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Location {
  id        Int       @id @default(autoincrement())
  uuid      String    @unique
  name      String    @unique
  floor     FloorType
  metadata  String?
  Item      Item[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Computer {
  id             Int      @id @default(autoincrement())
  uuid           String   @unique
  name           String   @unique
  metadata       String?
  monitor        Item?    @relation("ComputerMonitor", fields: [monitorName], references: [name])
  monitorName    String?  @unique
  keyboard       Item?    @relation("ComputerKeyboard", fields: [keyboardName], references: [name])
  keyboardName   String?  @unique
  mouse          Item?    @relation("ComputerMouse", fields: [mouseName], references: [name])
  mouseName      String?  @unique
  systemUnit     Item?    @relation("ComputerSystemUnit", fields: [systemUnitName], references: [name])
  systemUnitName String?  @unique
  others         String[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
